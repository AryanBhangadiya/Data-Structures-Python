# -*- coding: utf-8 -*-
"""Stack.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uWwVHPAtV_hhNVW_Nf9oQEbOWlfgnbGp
"""

from collections import deque

stack = deque()

dir(stack)

class Stack:
    def __init__(self):
        self.container = deque()

    def push(self, val):
        self.container.append(val)

    def pop(self):
        return self.container.pop()

    def peek(self):
        return self.container[-1]

    def is_empty(self):
        return len(self.container) == 0

    def size(self):
        return len(self.container)

    def reverseString(self, str):
        for s in str:
            self.push(s)

        temp = ""
        for s in range(len(str)):
            temp = temp + self.pop()

        return temp

def is_match(ch1, ch2):
    my_dict = {
        ')': '(',
        ']': '[',
        '}': '{'
    }
    return my_dict[ch1] == ch2

def is_balanced(s):
    stack = Stack()
    for ch in s:
        if ch == '(' or ch == '[' or ch == '{':
            stack.push(ch)
        if ch == ')' or ch == ']' or ch == '}':
            if stack.size() == 0:
                return False
            if not is_match(ch, stack.pop()):
                return False
    return stack.size() == 0

s = Stack()
s.push()

s.peek()

s.pop()

s.is_empty()

s.push(5)
s.push(10)
s.push(15)
s.push(20)

s.is_empty()

s.size()

s.pop()

stk = Stack()

str = "We will conquere COVID-19"

stk.reverseString(str)

if __name__ == '__main__':
    print(is_balanced("({a+b})"))
    print(is_balanced("))((a+b}{"))
    print(is_balanced("((a+b))"))
    print(is_balanced("[a+b]*(x+2y)*{gg+kk}"))
    print(is_balanced("))"))